.dialogWrapper {
  position: relative;
  z-index: 50;
}

.backdrop {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
}

.container {
  position: fixed;
  inset: 0;
  overflow-y: auto;
  padding: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.flexCenter {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  text-align: center;
}

.dialogPanel {
  position: relative;
  width: 100%;
  max-width: 32rem;
  background-color: #fff;
  border-radius: 1rem;
  padding: 2rem 2.5rem;
  box-shadow: 0 20px 30px rgba(0, 0, 0, 0.12);
  text-align: left;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-family: 'Inter', system-ui, sans-serif;
}

/* Close Icon Button */
.closeButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.25rem;
  color: #6B7280;
  transition: color 0.2s ease;
}

.closeButton:hover {
  color: #111827;
}

.dialogTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: #111827;
  margin-bottom: 1.25rem;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.input {
  width: 100%;
  border: 1.5px solid #D1D5DB;
  border-radius: 0.5rem;
  padding: 0.65rem 1rem;
  font-size: 1rem;
  font-weight: 500;
  color: #374151;
  outline-offset: 2px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input::placeholder {
  color: #9CA3AF;
  font-weight: 400;
}

.input:focus {
  border-color: #3B82F6;
  box-shadow: 0 0 8px rgba(59, 130, 246, 0.4);
}

.error {
  color: #EF4444;
  font-weight: 500;
  font-size: 0.875rem;
  margin-top: -0.25rem;
}

.message {
  color: #10B981;
  font-weight: 500;
  font-size: 0.9rem;
  margin-top: -0.25rem;
}

.submitButton {
  width: 100%;
  background: linear-gradient(90deg, #2563EB 0%, #1E40AF 100%);
  color: white;
  padding: 0.65rem 0;
  border-radius: 0.5rem;
  font-weight: 700;
  font-size: 1.05rem;
  cursor: pointer;
  border: none;
  box-shadow: 0 4px 14px rgba(37, 99, 235, 0.4);
  transition: background 0.3s ease, box-shadow 0.3s ease;
}

.submitButton:hover:not(:disabled) {
  background: linear-gradient(90deg, #1E40AF 0%, #2563EB 100%);
  box-shadow: 0 6px 20px rgba(30, 64, 175, 0.6);
}

.submitButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.googleButton {
  margin-top: 1.25rem;
  width: 100%;
  border: 1.5px solid #D1D5DB;
  border-radius: 0.5rem;
  padding: 0.6rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
  background-color: #fff;
  font-weight: 600;
  font-size: 1rem;
  color: #374151;
  box-shadow: 0 2px 8px rgb(209 213 219 / 0.5);
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

.googleButton:hover:not(:disabled) {
  background-color: #F9FAFB;
  box-shadow: 0 4px 14px rgba(209, 213, 219, 0.8);
}

.googleButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.googleIcon {
  width: 1.5rem;
  height: 1.5rem;
}

.switchText {
  margin-top: 1.25rem;
  text-align: center;
  font-size: 0.9rem;
  color: #6B7280;
  font-weight: 500;
}

.switchButton {
  color: #2563EB;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  font-weight: 600;
  text-decoration: underline;
  font-size: 0.9rem;
  transition: color 0.3s ease;
}

.switchButton:hover {
  color: #1D4ED8;
}

/* Headless UI transition classes */
.transitionEnter {
  transition-property: opacity;
  transition-duration: 300ms;
  transition-timing-function: ease-out;
}

.transitionEnterFrom {
  opacity: 0;
}

.transitionEnterTo {
  opacity: 1;
}

.transitionLeave {
  transition-property: opacity;
  transition-duration: 200ms;
  transition-timing-function: ease-in;
}

.transitionLeaveFrom {
  opacity: 1;
}

.transitionLeaveTo {
  opacity: 0;
}

.scaleEnter {
  transition-property: opacity, transform;
  transition-duration: 300ms;
  transition-timing-function: ease-out;
}

.scaleEnterFrom {
  opacity: 0;
  transform: scale(0.95);
}

.scaleEnterTo {
  opacity: 1;
  transform: scale(1);
}

.scaleLeave {
  transition-property: opacity, transform;
  transition-duration: 200ms;
  transition-timing-function: ease-in;
}

.scaleLeaveFrom {
  opacity: 1;
  transform: scale(1);
}

.scaleLeaveTo {
  opacity: 0;
  transform: scale(0.95);
}
